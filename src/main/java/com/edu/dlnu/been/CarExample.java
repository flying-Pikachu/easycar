package com.edu.dlnu.been;

import java.util.ArrayList;
import java.util.List;

public class CarExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cars
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cars
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cars
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public CarExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cars
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cars
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCaridIsNull() {
            addCriterion("carID is null");
            return (Criteria) this;
        }

        public Criteria andCaridIsNotNull() {
            addCriterion("carID is not null");
            return (Criteria) this;
        }

        public Criteria andCaridEqualTo(String value) {
            addCriterion("carID =", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridNotEqualTo(String value) {
            addCriterion("carID <>", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridGreaterThan(String value) {
            addCriterion("carID >", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridGreaterThanOrEqualTo(String value) {
            addCriterion("carID >=", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridLessThan(String value) {
            addCriterion("carID <", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridLessThanOrEqualTo(String value) {
            addCriterion("carID <=", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridLike(String value) {
            addCriterion("carID like", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridNotLike(String value) {
            addCriterion("carID not like", value, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridIn(List<String> values) {
            addCriterion("carID in", values, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridNotIn(List<String> values) {
            addCriterion("carID not in", values, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridBetween(String value1, String value2) {
            addCriterion("carID between", value1, value2, "carid");
            return (Criteria) this;
        }

        public Criteria andCaridNotBetween(String value1, String value2) {
            addCriterion("carID not between", value1, value2, "carid");
            return (Criteria) this;
        }

        public Criteria andCarbrandIsNull() {
            addCriterion("carBrand is null");
            return (Criteria) this;
        }

        public Criteria andCarbrandIsNotNull() {
            addCriterion("carBrand is not null");
            return (Criteria) this;
        }

        public Criteria andCarbrandEqualTo(String value) {
            addCriterion("carBrand =", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandNotEqualTo(String value) {
            addCriterion("carBrand <>", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandGreaterThan(String value) {
            addCriterion("carBrand >", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandGreaterThanOrEqualTo(String value) {
            addCriterion("carBrand >=", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandLessThan(String value) {
            addCriterion("carBrand <", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandLessThanOrEqualTo(String value) {
            addCriterion("carBrand <=", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandLike(String value) {
            addCriterion("carBrand like", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandNotLike(String value) {
            addCriterion("carBrand not like", value, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandIn(List<String> values) {
            addCriterion("carBrand in", values, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandNotIn(List<String> values) {
            addCriterion("carBrand not in", values, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandBetween(String value1, String value2) {
            addCriterion("carBrand between", value1, value2, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarbrandNotBetween(String value1, String value2) {
            addCriterion("carBrand not between", value1, value2, "carbrand");
            return (Criteria) this;
        }

        public Criteria andCarmodelIsNull() {
            addCriterion("carModel is null");
            return (Criteria) this;
        }

        public Criteria andCarmodelIsNotNull() {
            addCriterion("carModel is not null");
            return (Criteria) this;
        }

        public Criteria andCarmodelEqualTo(String value) {
            addCriterion("carModel =", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelNotEqualTo(String value) {
            addCriterion("carModel <>", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelGreaterThan(String value) {
            addCriterion("carModel >", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelGreaterThanOrEqualTo(String value) {
            addCriterion("carModel >=", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelLessThan(String value) {
            addCriterion("carModel <", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelLessThanOrEqualTo(String value) {
            addCriterion("carModel <=", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelLike(String value) {
            addCriterion("carModel like", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelNotLike(String value) {
            addCriterion("carModel not like", value, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelIn(List<String> values) {
            addCriterion("carModel in", values, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelNotIn(List<String> values) {
            addCriterion("carModel not in", values, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelBetween(String value1, String value2) {
            addCriterion("carModel between", value1, value2, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarmodelNotBetween(String value1, String value2) {
            addCriterion("carModel not between", value1, value2, "carmodel");
            return (Criteria) this;
        }

        public Criteria andCarstructIsNull() {
            addCriterion("carStruct is null");
            return (Criteria) this;
        }

        public Criteria andCarstructIsNotNull() {
            addCriterion("carStruct is not null");
            return (Criteria) this;
        }

        public Criteria andCarstructEqualTo(String value) {
            addCriterion("carStruct =", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructNotEqualTo(String value) {
            addCriterion("carStruct <>", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructGreaterThan(String value) {
            addCriterion("carStruct >", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructGreaterThanOrEqualTo(String value) {
            addCriterion("carStruct >=", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructLessThan(String value) {
            addCriterion("carStruct <", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructLessThanOrEqualTo(String value) {
            addCriterion("carStruct <=", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructLike(String value) {
            addCriterion("carStruct like", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructNotLike(String value) {
            addCriterion("carStruct not like", value, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructIn(List<String> values) {
            addCriterion("carStruct in", values, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructNotIn(List<String> values) {
            addCriterion("carStruct not in", values, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructBetween(String value1, String value2) {
            addCriterion("carStruct between", value1, value2, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCarstructNotBetween(String value1, String value2) {
            addCriterion("carStruct not between", value1, value2, "carstruct");
            return (Criteria) this;
        }

        public Criteria andCardisplacementIsNull() {
            addCriterion("carDisplacement is null");
            return (Criteria) this;
        }

        public Criteria andCardisplacementIsNotNull() {
            addCriterion("carDisplacement is not null");
            return (Criteria) this;
        }

        public Criteria andCardisplacementEqualTo(Double value) {
            addCriterion("carDisplacement =", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementNotEqualTo(Double value) {
            addCriterion("carDisplacement <>", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementGreaterThan(Double value) {
            addCriterion("carDisplacement >", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementGreaterThanOrEqualTo(Double value) {
            addCriterion("carDisplacement >=", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementLessThan(Double value) {
            addCriterion("carDisplacement <", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementLessThanOrEqualTo(Double value) {
            addCriterion("carDisplacement <=", value, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementIn(List<Double> values) {
            addCriterion("carDisplacement in", values, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementNotIn(List<Double> values) {
            addCriterion("carDisplacement not in", values, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementBetween(Double value1, Double value2) {
            addCriterion("carDisplacement between", value1, value2, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andCardisplacementNotBetween(Double value1, Double value2) {
            addCriterion("carDisplacement not between", value1, value2, "cardisplacement");
            return (Criteria) this;
        }

        public Criteria andIsmanualIsNull() {
            addCriterion("isManual is null");
            return (Criteria) this;
        }

        public Criteria andIsmanualIsNotNull() {
            addCriterion("isManual is not null");
            return (Criteria) this;
        }

        public Criteria andIsmanualEqualTo(Byte value) {
            addCriterion("isManual =", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualNotEqualTo(Byte value) {
            addCriterion("isManual <>", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualGreaterThan(Byte value) {
            addCriterion("isManual >", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualGreaterThanOrEqualTo(Byte value) {
            addCriterion("isManual >=", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualLessThan(Byte value) {
            addCriterion("isManual <", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualLessThanOrEqualTo(Byte value) {
            addCriterion("isManual <=", value, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualIn(List<Byte> values) {
            addCriterion("isManual in", values, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualNotIn(List<Byte> values) {
            addCriterion("isManual not in", values, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualBetween(Byte value1, Byte value2) {
            addCriterion("isManual between", value1, value2, "ismanual");
            return (Criteria) this;
        }

        public Criteria andIsmanualNotBetween(Byte value1, Byte value2) {
            addCriterion("isManual not between", value1, value2, "ismanual");
            return (Criteria) this;
        }

        public Criteria andMaxmumIsNull() {
            addCriterion("maxMum is null");
            return (Criteria) this;
        }

        public Criteria andMaxmumIsNotNull() {
            addCriterion("maxMum is not null");
            return (Criteria) this;
        }

        public Criteria andMaxmumEqualTo(Integer value) {
            addCriterion("maxMum =", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumNotEqualTo(Integer value) {
            addCriterion("maxMum <>", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumGreaterThan(Integer value) {
            addCriterion("maxMum >", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumGreaterThanOrEqualTo(Integer value) {
            addCriterion("maxMum >=", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumLessThan(Integer value) {
            addCriterion("maxMum <", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumLessThanOrEqualTo(Integer value) {
            addCriterion("maxMum <=", value, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumIn(List<Integer> values) {
            addCriterion("maxMum in", values, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumNotIn(List<Integer> values) {
            addCriterion("maxMum not in", values, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumBetween(Integer value1, Integer value2) {
            addCriterion("maxMum between", value1, value2, "maxmum");
            return (Criteria) this;
        }

        public Criteria andMaxmumNotBetween(Integer value1, Integer value2) {
            addCriterion("maxMum not between", value1, value2, "maxmum");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceIsNull() {
            addCriterion("originalPrice is null");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceIsNotNull() {
            addCriterion("originalPrice is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceEqualTo(Double value) {
            addCriterion("originalPrice =", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceNotEqualTo(Double value) {
            addCriterion("originalPrice <>", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceGreaterThan(Double value) {
            addCriterion("originalPrice >", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("originalPrice >=", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceLessThan(Double value) {
            addCriterion("originalPrice <", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceLessThanOrEqualTo(Double value) {
            addCriterion("originalPrice <=", value, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceIn(List<Double> values) {
            addCriterion("originalPrice in", values, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceNotIn(List<Double> values) {
            addCriterion("originalPrice not in", values, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceBetween(Double value1, Double value2) {
            addCriterion("originalPrice between", value1, value2, "originalprice");
            return (Criteria) this;
        }

        public Criteria andOriginalpriceNotBetween(Double value1, Double value2) {
            addCriterion("originalPrice not between", value1, value2, "originalprice");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNull() {
            addCriterion("discount is null");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNotNull() {
            addCriterion("discount is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountEqualTo(Double value) {
            addCriterion("discount =", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotEqualTo(Double value) {
            addCriterion("discount <>", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThan(Double value) {
            addCriterion("discount >", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThanOrEqualTo(Double value) {
            addCriterion("discount >=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThan(Double value) {
            addCriterion("discount <", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThanOrEqualTo(Double value) {
            addCriterion("discount <=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountIn(List<Double> values) {
            addCriterion("discount in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotIn(List<Double> values) {
            addCriterion("discount not in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountBetween(Double value1, Double value2) {
            addCriterion("discount between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotBetween(Double value1, Double value2) {
            addCriterion("discount not between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andImgIsNull() {
            addCriterion("img is null");
            return (Criteria) this;
        }

        public Criteria andImgIsNotNull() {
            addCriterion("img is not null");
            return (Criteria) this;
        }

        public Criteria andImgEqualTo(String value) {
            addCriterion("img =", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgNotEqualTo(String value) {
            addCriterion("img <>", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgGreaterThan(String value) {
            addCriterion("img >", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgGreaterThanOrEqualTo(String value) {
            addCriterion("img >=", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgLessThan(String value) {
            addCriterion("img <", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgLessThanOrEqualTo(String value) {
            addCriterion("img <=", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgLike(String value) {
            addCriterion("img like", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgNotLike(String value) {
            addCriterion("img not like", value, "img");
            return (Criteria) this;
        }

        public Criteria andImgIn(List<String> values) {
            addCriterion("img in", values, "img");
            return (Criteria) this;
        }

        public Criteria andImgNotIn(List<String> values) {
            addCriterion("img not in", values, "img");
            return (Criteria) this;
        }

        public Criteria andImgBetween(String value1, String value2) {
            addCriterion("img between", value1, value2, "img");
            return (Criteria) this;
        }

        public Criteria andImgNotBetween(String value1, String value2) {
            addCriterion("img not between", value1, value2, "img");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cars
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cars
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}